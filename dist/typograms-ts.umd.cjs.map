{"version":3,"file":"typograms-ts.umd.cjs","sources":["../src/glyph-util.ts","../src/glyphs.ts","../src/util.ts","../src/typograms.ts","../src/main.ts"],"sourcesContent":["export function createTag(tag: string, attrs: Record<string, string | number | boolean> = {}) {\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  Object.entries(attrs).forEach(([k, v]) => elem.setAttribute(k, `${v}`));\n  return elem;\n}\n\nexport function grid(width: number, height: number) {\n  const result = createTag(\"g\");\n  for (let i = 0; i <= width * 30; i += 3) {\n    const line = createTag(\"line\", {\n      x1: i,\n      y1: 0,\n      x2: i,\n      y2: 54 * height,\n      class: \"grid\"\n    });\n    result.appendChild(line);\n  }\n\n  for (let i = 0; i <= height * 54; i += 3) {\n    const line = createTag(\"line\", {\n      x1: 0,\n      y1: i,\n      x2: 30 * width,\n      y2: i,\n      class: \"grid\"\n    });\n    result.appendChild(line);\n  }\n\n  return result;\n}\n\nexport function cross([top, right, bottom, left, topRight, bottomRight, bottomLeft, topLeft]: [\n  boolean,\n  boolean,\n  boolean,\n  boolean,\n  boolean,\n  boolean,\n  boolean,\n  boolean\n]) {\n  const result = createTag(\"g\");\n  if (top) {\n    const line = createTag(\"line\", { x1: 15, y1: 0, x2: 15, y2: 27, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  if (right) {\n    const line = createTag(\"line\", { x1: 15, y1: 27, x2: 30, y2: 27, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  if (bottom) {\n    const line = createTag(\"line\", { x1: 15, y1: 27, x2: 15, y2: 54, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  if (left) {\n    const line = createTag(\"line\", { x1: 0, y1: 27, x2: 15, y2: 27, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  if (topRight) {\n    const line = createTag(\"line\", { x1: 30, y1: 0, x2: 15, y2: 27, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  if (bottomRight) {\n    const line = createTag(\"line\", { x1: 15, y1: 27, x2: 30, y2: 54, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  if (bottomLeft) {\n    const line = createTag(\"line\", { x1: 15, y1: 27, x2: 0, y2: 54, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  if (topLeft) {\n    const line = createTag(\"line\", { x1: 0, y1: 0, x2: 15, y2: 27, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  return result;\n}\n\nexport function text(char: string, reserved: boolean) {\n  const g = createTag(\"g\");\n  const result = createTag(\"text\", { \"dominant-baseline\": \"central\" });\n  const value = document.createTextNode(char);\n  result.appendChild(value);\n  if (reserved) {\n    result.setAttribute(\"class\", \"reserved\");\n  }\n  const translation = [\n    [15, 24]\n    //[1.5, 1.5 * ratio]\n  ];\n  result.setAttribute(\"transform\", translation.map(([x, y]) => `translate(${x}, ${y})`).join(\" \"));\n  g.appendChild(result);\n  return g;\n}\n\nexport function around(\n  diagram: string[][],\n  [x, y]: [number, number]\n): [string, string, string, string, string, string, string, string] {\n  let left = \" \";\n  let top = \" \";\n  let right = \" \";\n  let bottom = \" \";\n  let topRight = \" \";\n  let bottomRight = \" \";\n  let bottomLeft = \" \";\n  let topLeft = \" \";\n  if (y > 0) {\n    top = diagram[y - 1][x] || \" \";\n  }\n  if (x < diagram[y].length - 1) {\n    right = diagram[y][x + 1] || \" \";\n  }\n  if (y < diagram.length - 1) {\n    bottom = diagram[y + 1][x] || \" \";\n  }\n  if (x > 0) {\n    left = diagram[y][x - 1] || \" \";\n  }\n  if (y > 0 && x < diagram[y - 1].length - 1) {\n    // console.log(`@${diagram[y][x]}: ${diagram[y - 1][x + 1]}`);\n    topRight = diagram[y - 1][x + 1] || \" \";\n  }\n  //if (diagram[y][x] == \".\") {\n  //console.log(`${diagram[y][x]}}: ${(y + 1) < (diagram.length)}`);\n  //console.log(diagram[y + 1]);\n  //throw new Error(\"hi\");\n  //}\n  if (y + 1 < diagram.length && x < diagram[y + 1].length) {\n    bottomRight = diagram[y + 1][x + 1] || \" \";\n    //console.log(diagram[y + 1]);\n    //console.log(`${diagram[y][x]}: ${x} ${y} ${bottomRight}`);\n    //throw new Error(\"hi\");\n  }\n  if (y < diagram.length - 1 && x > 0) {\n    bottomLeft = diagram[y + 1][x - 1] || \" \";\n  }\n  if (y > 0 && x > 0) {\n    topLeft = diagram[y - 1][x - 1] || \" \";\n  }\n  return [top, right, bottom, left, topRight, bottomRight, bottomLeft, topLeft];\n  //.map((el) => alias[el] ? alias[el] : el);\n}\n","import { createTag, cross } from \"./glyph-util\";\n\ntype Neighbours = [string, string, string, string, string, string, string, string];\n\ntype GlyphHandler = ([\n  top,\n  right,\n  bottom,\n  left,\n  topRight,\n  bottomRight,\n  bottomLeft,\n  topLeft\n]: Neighbours) => SVGElement;\n\nexport function barGlyph([, right, , left, topRight, bottomRight, bottomLeft, topLeft]: Neighbours) {\n  const result = createTag(\"g\");\n\n  if (right == \"_\") {\n    const line = createTag(\"line\", { x1: \"18\", y1: \"51\", x2: \"30\", y2: \"51\", class: \"part\" });\n    result.appendChild(line);\n  }\n  if (left == \"_\") {\n    const line = createTag(\"line\", { x1: \"0\", y1: \"51\", x2: \"12\", y2: \"51\", class: \"part\" });\n    result.appendChild(line);\n  }\n  if (topRight == \"_\") {\n    const line = createTag(\"line\", { x1: \"12\", y1: \"-3\", x2: \"30\", y2: \"-3\", class: \"part\" });\n    result.appendChild(line);\n  }\n  if (topLeft == \"_\") {\n    const line = createTag(\"line\", { x1: \"0\", y1: \"-3\", x2: \"18\", y2: \"-3\", class: \"part\" });\n    result.appendChild(line);\n  }\n  result.appendChild(\n    cross([\n      !(topRight == \"/\" && topLeft == \"\\\\\"), // top\n      [\"-\"].includes(right), // right\n      !(bottomLeft == \"/\" && bottomRight == \"\\\\\"), // bottom\n      [\"-\"].includes(left), // left\n      topRight == \"/\", // topRight\n      bottomRight == \"\\\\\", // bottomRight\n      bottomLeft == \"/\", // bottomLeft\n      topLeft == \"\\\\\" // topLeft\n    ])\n  );\n  return result;\n}\n\nexport function dashGlyph([top, , bottom, , , , ,]: Neighbours): SVGElement {\n  return cross([\n    [\"|\"].includes(top), // top\n    true, // right\n    [\"|\"].includes(bottom), // bottom\n    true, // left\n    false, // topRight\n    false, // bottomRight\n    false, // bottomLeft\n    false // topLeft\n  ]);\n}\n\nexport function tildeGlyph(): SVGElement {\n  const result = createTag(\"g\");\n  const line = createTag(\"line\", { x1: \"9\", y1: \"27\", x2: \"24\", y2: \"27\", class: \"part\" });\n  result.appendChild(line);\n  return result;\n}\n\nexport function underscoreGlyph(around: Neighbours): SVGElement {\n  const line = dashGlyph(around);\n  line.setAttribute(\"transform\", \"translate(0 24)\");\n  return line;\n}\n\nexport function colonGlyph([top, , bottom]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  {\n    const line = createTag(\"line\", {\n      x1: \"15\",\n      y1: \"0\",\n      x2: \"15\",\n      y2: \"60\",\n      class: \"part\",\n      style: \"stroke-dasharray: 15; stroke-dashoffset: 0;\"\n    });\n    result.appendChild(line);\n  }\n  if (top == \"+\") {\n    const line = createTag(\"line\", { x1: \"15\", y1: \"-24\", x2: \"15\", y2: \"-15\", class: \"part\" });\n    result.appendChild(line);\n  }\n  if (bottom == \"+\") {\n    const line = createTag(\"line\", { x1: \"15\", y1: \"60\", x2: \"15\", y2: \"78\", class: \"part\" });\n    result.appendChild(line);\n  }\n  return result;\n}\n\nexport function equalGlyph(): SVGElement {\n  const result = createTag(\"g\");\n  const first = createTag(\"line\", { x1: \"0\", y1: \"21\", x2: \"30\", y2: \"21\", class: \"part\" });\n  result.appendChild(first);\n  const second = createTag(\"line\", { x1: \"0\", y1: \"30\", x2: \"30\", y2: \"30\", class: \"part\" });\n  result.appendChild(second);\n  return result;\n}\n\nexport function asteriskGlyph([\n  top,\n  right,\n  bottom,\n  left,\n  topRight,\n  bottomRight,\n  bottomLeft,\n  topLeft\n]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const circle = createTag(\"circle\", {\n    cx: \"0\",\n    cy: \"0\",\n    r: \"21\",\n    stroke: \"none\",\n    transform: \"translate(15, 27)\"\n  });\n  result.appendChild(circle);\n\n  result.appendChild(\n    cross([\n      [\"+\", \"|\"].includes(top),\n      [\"+\", \"-\"].includes(right),\n      [\"+\", \"|\"].includes(bottom),\n      [\"+\", \"-\"].includes(left),\n      [\"/\"].includes(topRight),\n      [\"\\\\\"].includes(bottomRight),\n      [\"/\"].includes(bottomLeft),\n      [\"\\\\\"].includes(topLeft)\n    ])\n  );\n\n  return result;\n}\n\nexport function circleGlyph([\n  top,\n  right,\n  bottom,\n  left,\n  topRight,\n  bottomRight,\n  bottomLeft,\n  topLeft\n]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const circle = createTag(\"circle\", {\n    cx: \"0\",\n    cy: \"0\",\n    r: \"18\",\n    \"stroke-width\": \"6\",\n    fill: \"none\",\n    stroke: \"black\",\n    transform: \"translate(15, 27)\"\n  });\n  result.appendChild(circle);\n\n  const connectors = cross([\n    [\"+\", \"|\"].includes(top),\n    [\"+\", \"-\"].includes(right),\n    [\"+\", \"|\"].includes(bottom),\n    [\"+\", \"-\"].includes(left),\n    [\"/\"].includes(topRight),\n    [\"\\\\\"].includes(bottomRight),\n    [\"/\"].includes(bottomLeft),\n    [\"\\\\\"].includes(topLeft)\n  ]);\n\n  result.appendChild(connectors);\n\n  const inner = createTag(\"circle\", {\n    cx: \"0\",\n    cy: \"0\",\n    r: \"15\",\n    fill: \"white\",\n    opacity: \"100%\",\n    transform: \"translate(15, 27)\"\n  });\n  result.appendChild(inner);\n\n  return result;\n}\n\nexport function slashGlyph(around: Neighbours): SVGElement {\n  const [top, right, bottom, left] = around;\n  const result = createTag(\"g\");\n  result.appendChild(\n    cross([\n      [\"|\"].includes(top), // top\n      false, // right\n      [\"|\"].includes(bottom), // bottom\n      false, // left\n      true, // topRight\n      false, // bottomRight\n      true, // bottomLeft\n      false // topLeft\n    ])\n  );\n  if (right == \"\\\\\") {\n    const tip = cross([\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      true, // bottomLeft\n      false\n    ]);\n    tip.setAttribute(\"transform\", \"translate(30 -54)\");\n    tip.setAttribute(\"clip-path\", \"polygon(-3 0, 0 0, 0 54, -3 54)\");\n    result.appendChild(tip);\n  }\n  if (left == \"\\\\\") {\n    const tip = cross([\n      false,\n      false,\n      false,\n      false,\n      true, // topRight\n      false,\n      false, // bottomLeft\n      false\n    ]);\n    tip.setAttribute(\"transform\", \"translate(-30 54)\");\n    tip.setAttribute(\"clip-path\", \"polygon(15 -6, 33 -6, 33 6, 15 6)\");\n    result.appendChild(tip);\n  }\n\n  if (right == \"_\") {\n    const line = underscoreGlyph(around);\n    result.appendChild(line);\n  }\n\n  return result;\n}\n\nexport function doubleBackslashGlyph(around: Neighbours): SVGElement {\n  const [top, right, bottom, left] = around;\n  const result = createTag(\"g\");\n  result.appendChild(\n    cross([\n      [\"|\"].includes(top), // top\n      false, // right\n      [\"|\"].includes(bottom), // bottom\n      false, // left\n      false, // topRight\n      true, // bottomRight\n      false, // bottomLeft\n      true // topLeft\n    ])\n  );\n  if (left == \"/\") {\n    const tip = cross([\n      false,\n      false,\n      false,\n      false,\n      false,\n      true, // bottomRight\n      false,\n      false\n    ]);\n    tip.setAttribute(\"transform\", \"translate(-30 -54)\");\n    tip.setAttribute(\"clip-path\", \"polygon(15 0, 30 0, 30 54, 15 54)\");\n    result.appendChild(tip);\n  }\n  if (right == \"/\") {\n    const tip = cross([false, false, false, false, false, false, false, true]);\n    tip.setAttribute(\"transform\", \"translate(30 54)\");\n    tip.setAttribute(\"clip-path\", \"polygon(-3 0, 0 0, 0 6, -3 6)\");\n    result.appendChild(tip);\n  }\n\n  if (left == \"_\") {\n    const line = underscoreGlyph(around);\n    result.appendChild(line);\n  }\n\n  return result;\n}\n\nexport function sharpGlyph([\n  top,\n  right,\n  bottom,\n  left,\n  topRight,\n  bottomRight,\n  bottomLeft,\n  topLeft\n]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const polygon = createTag(\"polygon\");\n  const points = [\n    [0, 0],\n    [42, 0],\n    [42, 42],\n    [0, 42]\n  ];\n  polygon.setAttribute(\"points\", points.map(([x, y]) => `${x},${y}`).join(\" \"));\n  polygon.setAttribute(\"transform\", \"translate(-6, 6)\");\n  result.appendChild(polygon);\n\n  result.appendChild(\n    cross([\n      [\"+\", \"|\"].includes(top),\n      [\"+\", \"-\"].includes(right),\n      [\"+\", \"|\"].includes(bottom),\n      [\"+\", \"-\"].includes(left),\n      [\"/\"].includes(topRight),\n      [\"\\\\\"].includes(bottomRight),\n      [\"/\"].includes(bottomLeft),\n      [\"\\\\\"].includes(topLeft)\n    ])\n  );\n\n  return result;\n}\n\nexport function plusGlyph([\n  top,\n  right,\n  bottom,\n  left,\n  topRight,\n  bottomRight,\n  bottomLeft,\n  topLeft\n]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const r = [\"*\", \"#\", \"-\", \"+\", \"~\", \">\", \".\", \"'\", \"`\"].includes(right);\n  const l = [\"*\", \"#\", \"-\", \"+\", \"~\", \"<\", \".\", \"'\", \"`\"].includes(left);\n  const t = [\"*\", \"#\", \"|\", \"+\", \".\", \"`\", \"^\"].includes(top);\n  const b = [\"*\", \"#\", \"|\", \"+\", \"'\", \"`\", \"v\"].includes(bottom);\n  const tR = [\"/\", \"*\", \"#\"].includes(topRight);\n  const bR = [\"\\\\\", \"*\", \"#\"].includes(bottomRight);\n  const tL = [\"\\\\\", \"*\", \"#\"].includes(topLeft);\n  const bL = [\"/\", \"*\", \"#\"].includes(bottomLeft);\n\n  // cross\n  result.appendChild(cross([t, r, b, l, tR, bR, bL, tL]));\n\n  // center\n  if ((l || r) && (b || t)) {\n    const center = createTag(\"polygon\", {\n      points: \"0,0 6,0 6,6 0,6\",\n      transform: \"translate(-3 -3) translate(15 27)\"\n    });\n    result.appendChild(center);\n  }\n\n  // tip\n  if (tR || tL) {\n    const center = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      tL, // bottomRight\n      tR, // bottomLeft\n      false // topLeft\n    ]);\n    center.setAttribute(\"clip-path\", \"polygon(0 -3, 30 -3, 30 0, 0 0)\");\n    result.appendChild(center);\n  }\n\n  if (bR || bL) {\n    const center = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      bL, // topRight\n      false, // bottomRight\n      false, // bottomLeft\n      bR // topLeft\n    ]);\n    center.setAttribute(\"clip-path\", \"polygon(0 27, 15 27, 15 30, 0 30)\");\n    result.appendChild(center);\n  }\n\n  if (bL || tL) {\n    const center = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      bL && bR, // topRight\n      tL && tR, // bottomRight\n      false, // bottomLeft\n      false // topLeft\n    ]);\n    center.setAttribute(\"clip-path\", \"polygon(-3 0, 0 0, 0 54, -3 54)\");\n    result.appendChild(center);\n  }\n\n  if (bR || tR) {\n    const center = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      false, // bottomRight\n      tR && tL, // bottomLeft\n      bR && bL // topLeft\n    ]);\n    center.setAttribute(\"clip-path\", \"polygon(15 0, 30 0, 30 54, 15 54)\");\n    result.appendChild(center);\n  }\n\n  if (r || l) {\n    const center = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      r || bL, // topRight\n      tL, // bottomRight\n      tR, // bottomLeft\n      l || bR // topLeft\n    ]);\n    center.setAttribute(\"clip-path\", \"polygon(-3 24, 30 24, 30 30, -3 30)\");\n    result.appendChild(center);\n  }\n  return result;\n}\n\nexport function dotGlyph([\n  top,\n  right,\n  bottom,\n  left,\n  topRight,\n  bottomRight,\n  bottomLeft,\n  topLeft\n]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n\n  // top-right\n  if ((right == \"-\" || right == \"+\") && (bottom == \"|\" || bottom == \"'\" || bottom == \"`\" || bottom == \"+\")) {\n    const path = createTag(\"path\", {\n      d: `\n        M 30 24\n        A 18 18, 0, 0, 0, 12 42\n        L 12 54\n        L 18 54\n        L 18 42\n        A 12 12, 0, 0, 1, 30 30\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // top-left\n  if ((left == \"-\" || left == \"+\") && (bottom == \"|\" || bottom == \"'\" || bottom == \"`\" || bottom == \"+\")) {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 24\n        A 18 18, 0, 0, 1, 18 42\n        L 18 54\n        L 12 54\n        L 12 42\n        A 12 12, 0, 0, 0, 0 30        \n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // top-right\n  if ((right == \"-\" || right == \"+\") && (top == \"|\" || top == \".\" || top == \"+\")) {\n    const path = createTag(\"path\", {\n      d: `\n        M 30 30\n        A 18 18, 0, 0, 1, 12 12\n        L 12 0\n        L 18 0\n        L 18 12\n        A 12 12, 0, 0, 0, 30 24\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // bottom-left\n  if ((left == \"-\" || left == \"+\") && (top == \"|\" || top == \".\" || top == \"+\")) {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 30\n        A 18 18, 0, 0, 0, 18 12\n        L 18 0\n        L 12 0\n        L 12 12\n        A 12 12, 0, 0, 1, 0 24\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // bottom right-topRight\n  if (right == \"-\" && topRight == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 30 30\n        A 12 12, 0, 0, 1, 18 18\n        L 18 15\n        L 24 15\n        L 24 18\n        A 6 6, 0, 0, 0, 30 24\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      true, // topRight\n      false, // bottomRight\n      false, // bottomLeft\n      false // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(15px -10px, 30px -10px, 30px 30px, 2px 15px)\");\n    result.appendChild(line);\n  }\n\n  // right-topLeft\n  if (right == \"-\" && topLeft == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M -3 0\n        A 60 60, 0, 0, 0, 30 30\n        L 30 24\n        A 60 60, 0, 0, 1, 0 -6\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // left-topRight\n  if (left == \"-\" && topRight == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 30\n        A 60 60, 0, 0, 0, 33 0\n        L 30 -6\n        A 60 60, 0, 0, 1, 0 24\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // bottom left-topLeft\n  if (left == \"-\" && topLeft == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 30\n        A 12 12, 0, 0, 0, 12 18\n        L 12 15\n        L 6 15\n        L 6 18\n        A 6 6, 0, 0, 1, 0 24\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      false, // bottomRight\n      false, // bottomLeft\n      true // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(-3 -3, 12 -3, 12 18, -3 18)\");\n    result.appendChild(line);\n  }\n\n  // bottom-topRight\n  if (bottom == \"|\" && topRight == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 12 54\n        A 120 120, 0, 0, 1, 30 -6\n        L 37 -6\n        A 120 120, 0, 0, 0, 18 54\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // top-bottomRight\n  if (top == \"|\" && bottomRight == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 30 60\n        A 120 120, 0, 0, 1, 12 0\n        L 18 0\n        A 120 120, 0, 0, 0, 37 60\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // top-bottomLeft\n  if (top == \"|\" && bottomLeft == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 60\n        A 120 120, 0, 0, 0, 18 0\n        L 12 0\n        A 120 120, 0, 0, 1, -7 60\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // bottom-topLeft\n  if (bottom == \"|\" && topLeft == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 12 54\n        A 120 120, 0, 0, 0, -7 -6\n        L 0 -6\n        A 120 120, 0, 0, 1, 18 54\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // right-bottomLeft\n  if (right == \"-\" && bottomLeft == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 48\n        A 42 42, 0, 0, 1, 30 24\n        L 30 30\n        A 42 42, 0, 0, 0, 6 48\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      false, // bottomRight\n      true, // bottomLeft\n      false // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(-3 15, 12 15, 12 30, -3 30)\");\n    result.appendChild(line);\n  }\n\n  // left-bottomRight\n  if (left == \"-\" && bottomRight == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 24\n        A 42 42, 0, 0, 1, 30 48\n        L 24 48\n        A 42 42, 0, 0, 0, 0 30\n        Z`\n    });\n\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      true, // bottomRight\n      false, // bottomLeft\n      false // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(-3 15, 12 15, 21 30, -3 30)\");\n    result.appendChild(line);\n  }\n\n  // left-bottomLeft\n  if (left == \"-\" && bottomLeft == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 24\n        A 12 12, 0, 0, 1, 12 39\n        L 6 39\n        A 6 6, 0, 0, 0, 0 30\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      false, // bottomRight\n      true, // bottomLeft\n      false // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(-3 6, 12 6, 12 30, -3 30)\");\n    result.appendChild(line);\n  }\n\n  // right-bottomRight\n  if (right == \"-\" && bottomRight == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 30 24\n        A 12 12, 0, 0, 0, 18 39\n        L 24 39\n        A 6 6, 0, 0, 1, 30 30 \n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      true, // bottomRight\n      false, // bottomLeft\n      false // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(3 6, 18 6, 18 30, 3 30)\");\n    result.appendChild(line);\n  }\n\n  // bottomLeft-bottomRight\n  if (bottomLeft == \"/\" && bottomRight == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 3 42\n        A 15 15, 0, 0, 1, 27 42\n        L 25 51\n        A 9 9, 0, 0, 0, 5 51\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      true, // bottomRight\n      true, // bottomLeft\n      false // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(-3 15, 33 15, 33 30, -3 30)\");\n    result.appendChild(line);\n  }\n\n  // topLeft-topRight\n  if (topLeft == \"\\\\\" && topRight == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 3 12\n        A 15 15, 0, 0, 0, 27 12\n        L 22 9\n        A 9 9, 0, 0, 1, 8 9\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      true, // topRight\n      false, // bottomRight\n      false, // bottomLeft\n      true // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(-3 -3, 33 -3, 33 12, -3 12)\");\n    result.appendChild(line);\n  }\n\n  // topRight-bottomRight\n  if (topRight == \"/\" && bottomRight == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 22 9\n        A 30 30, 0, 0, 0, 22 45\n        L 28 45\n        A 30 30, 0, 0, 1, 28 9\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      true, // topRight\n      true, // bottomRight\n      false, // bottomLeft\n      false // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(6 -3, 33 -3, 33 57, 6 57)\");\n    result.appendChild(line);\n  }\n\n  // topLeft-bottomLeft\n  if (topLeft == \"\\\\\" && bottomLeft == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 8 9\n        A 30 30, 0, 0, 1, 8 45\n        L 2 45\n        A 30 30, 0, 0, 0, 2 9\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      false, // bottomRight\n      true, // bottomLeft\n      true // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(-3 -3, 9 -3, 9 57, -3 57)\");\n    result.appendChild(line);\n  }\n\n  return result;\n}\n\nexport function arrowRightGlyph([, right]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const arrow = createTag(\"polygon\", { points: \"0,0 42,18 0,36\" });\n  let reach = 0;\n  if (right == \"*\" || right == \"o\" || right == \"#\") {\n    reach -= 18;\n  }\n  arrow.setAttribute(\"transform\", `translate(${reach} 9)`);\n  result.appendChild(arrow);\n  return result;\n}\n\nexport function arrowLeftGlyph([, , , left]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const arrow = createTag(\"polygon\", { points: \"0,0 42,18 0,36\" });\n\n  let reach = 30;\n  if (left == \"*\" || left == \"o\" || left == \"#\") {\n    reach += 18;\n  }\n  arrow.setAttribute(\"transform\", `translate(${reach} 9) translate(0 36) rotate(180)`);\n  result.appendChild(arrow);\n  return result;\n}\n\nexport function arrowDownGlyph([top, , bottom, , topRight, , , topLeft]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const arrow = createTag(\"polygon\", { points: \"0,0 42,18 0,36\" });\n\n  let reach = 36;\n  if (bottom == \" \") {\n    reach = 12;\n  } else if (bottom == \"_\") {\n    reach += 18;\n  } else if (bottom == \"*\" || bottom == \"o\" || bottom == \"#\") {\n    reach -= 18;\n  }\n  if (topRight == \"/\") {\n    arrow.setAttribute(\"transform\", `translate(-36 33) rotate(${90 + 22.5}, 42, 18)`);\n  } else if (topLeft == \"\\\\\") {\n    arrow.setAttribute(\"transform\", `translate(-18 33) rotate(${90 - 22.5}, 42, 18)`);\n  } else {\n    arrow.setAttribute(\"transform\", `translate(33 ${reach}) rotate(90)`);\n  }\n  result.appendChild(arrow);\n  result.appendChild(\n    cross([\n      [\"|\", \"+\"].includes(top), // top\n      false, // right\n      [\"|\", \"+\"].includes(top), // bottom\n      false, // left\n      [\"/\"].includes(topRight), // topRight\n      false, // bottomRight\n      false, // bottomLeft\n      [\"\\\\\"].includes(topLeft) // topLeft\n    ])\n  );\n  return result;\n}\n\nexport function hatGlyph([top, , bottom, , , bottomRight, bottomLeft]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const arrow = createTag(\"polygon\", { points: \"0,0 42,18 0,36\" });\n\n  let reach = 42;\n  if (top == \"-\") {\n    reach -= 15;\n  }\n\n  if (bottomLeft == \"/\") {\n    arrow.setAttribute(\"transform\", `translate(-18 -15) rotate(${-45 - 22.5}, 42, 18)`);\n  } else if (bottomRight == \"\\\\\") {\n    arrow.setAttribute(\"transform\", `translate(-36 -15) rotate(${-90 - 22.5}, 42, 18)`);\n  } else {\n    arrow.setAttribute(\"transform\", `translate(-3 ${reach}) rotate(-90)`);\n  }\n  result.appendChild(arrow);\n  result.appendChild(\n    cross([\n      false, // top\n      false, // right\n      [\"+\", \"|\"].includes(bottom), // bottom\n      false, // left\n      false, // topRight\n      [\"\\\\\"].includes(bottomRight), // bottomRight\n      [\"/\"].includes(bottomLeft), // bottomLeft\n      false // topLeft\n    ])\n  );\n  return result;\n}\n\nexport function buildGlyphs(): Record<string, GlyphHandler> {\n  let glyphs: Record<string, GlyphHandler> = {\n    \"|\": barGlyph,\n    \"-\": dashGlyph,\n    \"~\": tildeGlyph,\n    _: underscoreGlyph,\n    \":\": colonGlyph,\n    \"=\": equalGlyph,\n    \"*\": asteriskGlyph,\n    o: circleGlyph,\n    \"/\": slashGlyph,\n    \"\\\\\": doubleBackslashGlyph,\n    \"#\": sharpGlyph,\n    \"+\": plusGlyph,\n    \".\": dotGlyph,\n    \">\": arrowRightGlyph,\n    \"<\": arrowLeftGlyph,\n    v: arrowDownGlyph,\n    \"^\": hatGlyph\n  };\n\n  const alias = {\n    \"┌\": \"+\",\n    \"┐\": \"+\",\n    \"└\": \"+\",\n    \"┘\": \"+\",\n    \"─\": \"-\",\n    \"►\": \">\",\n    \"'\": \".\",\n    \"`\": \".\",\n    V: \"v\"\n  };\n\n  Object.entries(alias).forEach(([k, v]) => {\n    glyphs[k] = (around) => glyphs[v](around);\n  });\n\n  return glyphs;\n}\n","export function dropWhile<T>(xs: T[], pred: (elem: T, idx: number) => boolean) {\n  const n = xs.length;\n  let i = 0;\n\n  while (i < n && pred(xs[i], i)) {\n    i++;\n  }\n\n  return xs.slice(i);\n}\n","import { around, createTag, grid, text } from \"./glyph-util\";\nimport { buildGlyphs } from \"./glyphs\";\nimport { dropWhile } from \"./util\";\n\nconst glyphs = buildGlyphs();\n\ntype Diagram = string[][];\nfunction render(diagram: Diagram) {\n  const result = createTag(\"g\");\n\n  for (let y = 0; y < diagram.length; y++) {\n    for (let x = 0; x < diagram[y].length; x++) {\n      const char = diagram[y][x];\n\n      if (char == \" \" || char == '\"') {\n        continue;\n      }\n\n      const g = createTag(\"g\");\n\n      let insideQuotedText = false;\n      for (let i = 0; i < x; i++) {\n        if (diagram[y][i] == '\"') {\n          insideQuotedText = !insideQuotedText;\n        }\n      }\n\n      const neighbors = around(diagram, [x, y]);\n\n      if (char.match(/[A-Za-z0-9]/)) {\n        const [, right, , left] = neighbors;\n        // We special case \"v\", which is a down arrow, and also a text character.\n        insideQuotedText =\n          insideQuotedText || !!left.match(/[A-Za-uw-z0-9]/) || !!right.match(/[A-Za-uw-z0-9]/);\n      }\n\n      const reserved = !!glyphs[char] && !insideQuotedText;\n\n      if (reserved) {\n        g.appendChild(glyphs[char](neighbors));\n      }\n\n      g.appendChild(text(char, reserved));\n\n      g.setAttribute(\"transform\", `translate(${x * 30} ${y * 54})`);\n      result.appendChild(g);\n    }\n  }\n  return result;\n}\n\ntype Opts = {\n  zoom: number,\n  debug: boolean,\n  padding: number\n}\n\nexport function create(source: string, opts: Opts) {\n  const lines = dropWhile(source.split(\"\\n\"), (v) => !v)\n  lines.splice(-1);\n  \n  const diagram = lines.map((line: string) => line.trimEnd().split(\"\"));\n\n  const width = diagram.reduce((acc: number, row: string[]) => Math.max(acc, row.length), -Infinity);\n  const height = diagram.length;\n\n  const padding = opts.padding;\n\n  let svg = createTag(\"svg\", {\n    width: width * 30 * opts.zoom,\n    height: height * 54 * opts.zoom,\n    debug: opts.debug,\n    viewBox: `${-padding} ${-padding} ${width * 30 + 2 * padding} ${height * 54 + 2 * padding}`,\n    class: \"debug typograms\"\n  });\n\n  svg.appendChild(render(diagram));\n\n  if (opts.debug) {\n    svg.appendChild(grid(width, height));\n  }\n\n  return svg;\n}\n","import \"./style.scss\";\nimport { create } from \"./typograms.js\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  for (const node of document.querySelectorAll(\"pre[data-typogram]\")) {\n    if (node.hasAttribute(\"data-typogram-disabled\")) {\n      continue;\n    }\n    const source = node.textContent;\n    const zoom = Number(node.getAttribute(\"data-typogram-zoom\") || 0.3);\n    const padding = Number(node.getAttribute(\"data-typogram-padding\") || 6);\n    const debug = node.hasAttribute(\"data-typogram-debug\");\n    if (source) {\n      const svg = create(source, { zoom, debug, padding });\n      node?.replaceWith(svg);\n    }\n  }\n  // stay backwards compatible\n  // replace all of the <script type=\"text/typogram\"> tags\n  for (const script of document.querySelectorAll(\"script[type='text/typogram']\")) {\n    if (script.hasAttribute(\"disabled\")) {\n      continue;\n    }\n    const source = script.textContent;\n    const zoom = Number(script.getAttribute(\"zoom\") || 0.3);\n    const padding = Number(script.getAttribute(\"padding\") || 0);\n    const debug = script.hasAttribute(\"grid\");\n    if (source) {\n      const svg = create(source, { zoom, debug, padding });\n      script?.parentNode?.insertBefore(svg, script.nextSibling);\n    }\n  }\n});\n"],"names":["createTag","tag","attrs","elem","k","v","grid","width","height","result","i","line","cross","top","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","text","char","reserved","g","value","translation","x","y","around","diagram","barGlyph","dashGlyph","tildeGlyph","underscoreGlyph","colonGlyph","equalGlyph","first","second","asteriskGlyph","circle","circleGlyph","connectors","inner","slashGlyph","tip","doubleBackslashGlyph","sharpGlyph","polygon","points","plusGlyph","r","l","t","tR","bR","tL","bL","center","dotGlyph","path","arrowRightGlyph","arrow","reach","arrowLeftGlyph","arrowDownGlyph","hatGlyph","buildGlyphs","glyphs","dropWhile","xs","pred","n","render","insideQuotedText","neighbors","create","source","opts","lines","acc","row","padding","svg","node","zoom","debug","script","_a"],"mappings":"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"}