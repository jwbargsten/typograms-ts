{"version":3,"file":"typograms-ts.js","sources":["../src/glyph-util.ts","../src/glyphs.ts","../src/util.ts","../src/typograms.ts","../src/main.ts"],"sourcesContent":["export function createTag(tag: string, attrs: Record<string, string | number | boolean> = {}) {\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  Object.entries(attrs).forEach(([k, v]) => elem.setAttribute(k, `${v}`));\n  return elem;\n}\n\nexport function grid(width: number, height: number) {\n  const result = createTag(\"g\");\n  for (let i = 0; i <= width * 30; i += 3) {\n    const line = createTag(\"line\", {\n      x1: i,\n      y1: 0,\n      x2: i,\n      y2: 54 * height,\n      class: \"grid\"\n    });\n    result.appendChild(line);\n  }\n\n  for (let i = 0; i <= height * 54; i += 3) {\n    const line = createTag(\"line\", {\n      x1: 0,\n      y1: i,\n      x2: 30 * width,\n      y2: i,\n      class: \"grid\"\n    });\n    result.appendChild(line);\n  }\n\n  return result;\n}\n\nexport function cross([top, right, bottom, left, topRight, bottomRight, bottomLeft, topLeft]: [\n  boolean,\n  boolean,\n  boolean,\n  boolean,\n  boolean,\n  boolean,\n  boolean,\n  boolean\n]) {\n  const result = createTag(\"g\");\n  if (top) {\n    const line = createTag(\"line\", { x1: 15, y1: 0, x2: 15, y2: 27, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  if (right) {\n    const line = createTag(\"line\", { x1: 15, y1: 27, x2: 30, y2: 27, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  if (bottom) {\n    const line = createTag(\"line\", { x1: 15, y1: 27, x2: 15, y2: 54, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  if (left) {\n    const line = createTag(\"line\", { x1: 0, y1: 27, x2: 15, y2: 27, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  if (topRight) {\n    const line = createTag(\"line\", { x1: 30, y1: 0, x2: 15, y2: 27, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  if (bottomRight) {\n    const line = createTag(\"line\", { x1: 15, y1: 27, x2: 30, y2: 54, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  if (bottomLeft) {\n    const line = createTag(\"line\", { x1: 15, y1: 27, x2: 0, y2: 54, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  if (topLeft) {\n    const line = createTag(\"line\", { x1: 0, y1: 0, x2: 15, y2: 27, class: \"part\" });\n    result.appendChild(line);\n  }\n\n  return result;\n}\n\nexport function text(char: string, reserved: boolean) {\n  const g = createTag(\"g\");\n  const result = createTag(\"text\", { \"dominant-baseline\": \"central\" });\n  const value = document.createTextNode(char);\n  result.appendChild(value);\n  if (reserved) {\n    result.setAttribute(\"class\", \"reserved\");\n  }\n  const translation = [\n    [15, 24]\n    //[1.5, 1.5 * ratio]\n  ];\n  result.setAttribute(\"transform\", translation.map(([x, y]) => `translate(${x}, ${y})`).join(\" \"));\n  g.appendChild(result);\n  return g;\n}\n\nexport function around(\n  diagram: string[][],\n  [x, y]: [number, number]\n): [string, string, string, string, string, string, string, string] {\n  let left = \" \";\n  let top = \" \";\n  let right = \" \";\n  let bottom = \" \";\n  let topRight = \" \";\n  let bottomRight = \" \";\n  let bottomLeft = \" \";\n  let topLeft = \" \";\n  if (y > 0) {\n    top = diagram[y - 1][x] || \" \";\n  }\n  if (x < diagram[y].length - 1) {\n    right = diagram[y][x + 1] || \" \";\n  }\n  if (y < diagram.length - 1) {\n    bottom = diagram[y + 1][x] || \" \";\n  }\n  if (x > 0) {\n    left = diagram[y][x - 1] || \" \";\n  }\n  if (y > 0 && x < diagram[y - 1].length - 1) {\n    // console.log(`@${diagram[y][x]}: ${diagram[y - 1][x + 1]}`);\n    topRight = diagram[y - 1][x + 1] || \" \";\n  }\n  //if (diagram[y][x] == \".\") {\n  //console.log(`${diagram[y][x]}}: ${(y + 1) < (diagram.length)}`);\n  //console.log(diagram[y + 1]);\n  //throw new Error(\"hi\");\n  //}\n  if (y + 1 < diagram.length && x < diagram[y + 1].length) {\n    bottomRight = diagram[y + 1][x + 1] || \" \";\n    //console.log(diagram[y + 1]);\n    //console.log(`${diagram[y][x]}: ${x} ${y} ${bottomRight}`);\n    //throw new Error(\"hi\");\n  }\n  if (y < diagram.length - 1 && x > 0) {\n    bottomLeft = diagram[y + 1][x - 1] || \" \";\n  }\n  if (y > 0 && x > 0) {\n    topLeft = diagram[y - 1][x - 1] || \" \";\n  }\n  return [top, right, bottom, left, topRight, bottomRight, bottomLeft, topLeft];\n  //.map((el) => alias[el] ? alias[el] : el);\n}\n","import { createTag, cross } from \"./glyph-util\";\n\ntype Neighbours = [string, string, string, string, string, string, string, string];\n\ntype GlyphHandler = ([\n  top,\n  right,\n  bottom,\n  left,\n  topRight,\n  bottomRight,\n  bottomLeft,\n  topLeft\n]: Neighbours) => SVGElement;\n\nexport function barGlyph([, right, , left, topRight, bottomRight, bottomLeft, topLeft]: Neighbours) {\n  const result = createTag(\"g\");\n\n  if (right == \"_\") {\n    const line = createTag(\"line\", { x1: \"18\", y1: \"51\", x2: \"30\", y2: \"51\", class: \"part\" });\n    result.appendChild(line);\n  }\n  if (left == \"_\") {\n    const line = createTag(\"line\", { x1: \"0\", y1: \"51\", x2: \"12\", y2: \"51\", class: \"part\" });\n    result.appendChild(line);\n  }\n  if (topRight == \"_\") {\n    const line = createTag(\"line\", { x1: \"12\", y1: \"-3\", x2: \"30\", y2: \"-3\", class: \"part\" });\n    result.appendChild(line);\n  }\n  if (topLeft == \"_\") {\n    const line = createTag(\"line\", { x1: \"0\", y1: \"-3\", x2: \"18\", y2: \"-3\", class: \"part\" });\n    result.appendChild(line);\n  }\n  result.appendChild(\n    cross([\n      !(topRight == \"/\" && topLeft == \"\\\\\"), // top\n      [\"-\"].includes(right), // right\n      !(bottomLeft == \"/\" && bottomRight == \"\\\\\"), // bottom\n      [\"-\"].includes(left), // left\n      topRight == \"/\", // topRight\n      bottomRight == \"\\\\\", // bottomRight\n      bottomLeft == \"/\", // bottomLeft\n      topLeft == \"\\\\\" // topLeft\n    ])\n  );\n  return result;\n}\n\nexport function dashGlyph([top, , bottom, , , , ,]: Neighbours): SVGElement {\n  return cross([\n    [\"|\"].includes(top), // top\n    true, // right\n    [\"|\"].includes(bottom), // bottom\n    true, // left\n    false, // topRight\n    false, // bottomRight\n    false, // bottomLeft\n    false // topLeft\n  ]);\n}\n\nexport function tildeGlyph(): SVGElement {\n  const result = createTag(\"g\");\n  const line = createTag(\"line\", { x1: \"9\", y1: \"27\", x2: \"24\", y2: \"27\", class: \"part\" });\n  result.appendChild(line);\n  return result;\n}\n\nexport function underscoreGlyph(around: Neighbours): SVGElement {\n  const line = dashGlyph(around);\n  line.setAttribute(\"transform\", \"translate(0 24)\");\n  return line;\n}\n\nexport function colonGlyph([top, , bottom]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  {\n    const line = createTag(\"line\", {\n      x1: \"15\",\n      y1: \"0\",\n      x2: \"15\",\n      y2: \"60\",\n      class: \"part\",\n      style: \"stroke-dasharray: 15; stroke-dashoffset: 0;\"\n    });\n    result.appendChild(line);\n  }\n  if (top == \"+\") {\n    const line = createTag(\"line\", { x1: \"15\", y1: \"-24\", x2: \"15\", y2: \"-15\", class: \"part\" });\n    result.appendChild(line);\n  }\n  if (bottom == \"+\") {\n    const line = createTag(\"line\", { x1: \"15\", y1: \"60\", x2: \"15\", y2: \"78\", class: \"part\" });\n    result.appendChild(line);\n  }\n  return result;\n}\n\nexport function equalGlyph(): SVGElement {\n  const result = createTag(\"g\");\n  const first = createTag(\"line\", { x1: \"0\", y1: \"21\", x2: \"30\", y2: \"21\", class: \"part\" });\n  result.appendChild(first);\n  const second = createTag(\"line\", { x1: \"0\", y1: \"30\", x2: \"30\", y2: \"30\", class: \"part\" });\n  result.appendChild(second);\n  return result;\n}\n\nexport function asteriskGlyph([\n  top,\n  right,\n  bottom,\n  left,\n  topRight,\n  bottomRight,\n  bottomLeft,\n  topLeft\n]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const circle = createTag(\"circle\", {\n    cx: \"0\",\n    cy: \"0\",\n    r: \"21\",\n    stroke: \"none\",\n    transform: \"translate(15, 27)\"\n  });\n  result.appendChild(circle);\n\n  result.appendChild(\n    cross([\n      [\"+\", \"|\"].includes(top),\n      [\"+\", \"-\"].includes(right),\n      [\"+\", \"|\"].includes(bottom),\n      [\"+\", \"-\"].includes(left),\n      [\"/\"].includes(topRight),\n      [\"\\\\\"].includes(bottomRight),\n      [\"/\"].includes(bottomLeft),\n      [\"\\\\\"].includes(topLeft)\n    ])\n  );\n\n  return result;\n}\n\nexport function circleGlyph([\n  top,\n  right,\n  bottom,\n  left,\n  topRight,\n  bottomRight,\n  bottomLeft,\n  topLeft\n]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const circle = createTag(\"circle\", {\n    cx: \"0\",\n    cy: \"0\",\n    r: \"18\",\n    \"stroke-width\": \"6\",\n    fill: \"none\",\n    stroke: \"black\",\n    transform: \"translate(15, 27)\"\n  });\n  result.appendChild(circle);\n\n  const connectors = cross([\n    [\"+\", \"|\"].includes(top),\n    [\"+\", \"-\"].includes(right),\n    [\"+\", \"|\"].includes(bottom),\n    [\"+\", \"-\"].includes(left),\n    [\"/\"].includes(topRight),\n    [\"\\\\\"].includes(bottomRight),\n    [\"/\"].includes(bottomLeft),\n    [\"\\\\\"].includes(topLeft)\n  ]);\n\n  result.appendChild(connectors);\n\n  const inner = createTag(\"circle\", {\n    cx: \"0\",\n    cy: \"0\",\n    r: \"15\",\n    fill: \"white\",\n    opacity: \"100%\",\n    transform: \"translate(15, 27)\"\n  });\n  result.appendChild(inner);\n\n  return result;\n}\n\nexport function slashGlyph(around: Neighbours): SVGElement {\n  const [top, right, bottom, left] = around;\n  const result = createTag(\"g\");\n  result.appendChild(\n    cross([\n      [\"|\"].includes(top), // top\n      false, // right\n      [\"|\"].includes(bottom), // bottom\n      false, // left\n      true, // topRight\n      false, // bottomRight\n      true, // bottomLeft\n      false // topLeft\n    ])\n  );\n  if (right == \"\\\\\") {\n    const tip = cross([\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      true, // bottomLeft\n      false\n    ]);\n    tip.setAttribute(\"transform\", \"translate(30 -54)\");\n    tip.setAttribute(\"clip-path\", \"polygon(-3 0, 0 0, 0 54, -3 54)\");\n    result.appendChild(tip);\n  }\n  if (left == \"\\\\\") {\n    const tip = cross([\n      false,\n      false,\n      false,\n      false,\n      true, // topRight\n      false,\n      false, // bottomLeft\n      false\n    ]);\n    tip.setAttribute(\"transform\", \"translate(-30 54)\");\n    tip.setAttribute(\"clip-path\", \"polygon(15 -6, 33 -6, 33 6, 15 6)\");\n    result.appendChild(tip);\n  }\n\n  if (right == \"_\") {\n    const line = underscoreGlyph(around);\n    result.appendChild(line);\n  }\n\n  return result;\n}\n\nexport function doubleBackslashGlyph(around: Neighbours): SVGElement {\n  const [top, right, bottom, left] = around;\n  const result = createTag(\"g\");\n  result.appendChild(\n    cross([\n      [\"|\"].includes(top), // top\n      false, // right\n      [\"|\"].includes(bottom), // bottom\n      false, // left\n      false, // topRight\n      true, // bottomRight\n      false, // bottomLeft\n      true // topLeft\n    ])\n  );\n  if (left == \"/\") {\n    const tip = cross([\n      false,\n      false,\n      false,\n      false,\n      false,\n      true, // bottomRight\n      false,\n      false\n    ]);\n    tip.setAttribute(\"transform\", \"translate(-30 -54)\");\n    tip.setAttribute(\"clip-path\", \"polygon(15 0, 30 0, 30 54, 15 54)\");\n    result.appendChild(tip);\n  }\n  if (right == \"/\") {\n    const tip = cross([false, false, false, false, false, false, false, true]);\n    tip.setAttribute(\"transform\", \"translate(30 54)\");\n    tip.setAttribute(\"clip-path\", \"polygon(-3 0, 0 0, 0 6, -3 6)\");\n    result.appendChild(tip);\n  }\n\n  if (left == \"_\") {\n    const line = underscoreGlyph(around);\n    result.appendChild(line);\n  }\n\n  return result;\n}\n\nexport function sharpGlyph([\n  top,\n  right,\n  bottom,\n  left,\n  topRight,\n  bottomRight,\n  bottomLeft,\n  topLeft\n]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const polygon = createTag(\"polygon\");\n  const points = [\n    [0, 0],\n    [42, 0],\n    [42, 42],\n    [0, 42]\n  ];\n  polygon.setAttribute(\"points\", points.map(([x, y]) => `${x},${y}`).join(\" \"));\n  polygon.setAttribute(\"transform\", \"translate(-6, 6)\");\n  result.appendChild(polygon);\n\n  result.appendChild(\n    cross([\n      [\"+\", \"|\"].includes(top),\n      [\"+\", \"-\"].includes(right),\n      [\"+\", \"|\"].includes(bottom),\n      [\"+\", \"-\"].includes(left),\n      [\"/\"].includes(topRight),\n      [\"\\\\\"].includes(bottomRight),\n      [\"/\"].includes(bottomLeft),\n      [\"\\\\\"].includes(topLeft)\n    ])\n  );\n\n  return result;\n}\n\nexport function plusGlyph([\n  top,\n  right,\n  bottom,\n  left,\n  topRight,\n  bottomRight,\n  bottomLeft,\n  topLeft\n]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const r = [\"*\", \"#\", \"-\", \"+\", \"~\", \">\", \".\", \"'\", \"`\"].includes(right);\n  const l = [\"*\", \"#\", \"-\", \"+\", \"~\", \"<\", \".\", \"'\", \"`\"].includes(left);\n  const t = [\"*\", \"#\", \"|\", \"+\", \".\", \"`\", \"^\"].includes(top);\n  const b = [\"*\", \"#\", \"|\", \"+\", \"'\", \"`\", \"v\"].includes(bottom);\n  const tR = [\"/\", \"*\", \"#\"].includes(topRight);\n  const bR = [\"\\\\\", \"*\", \"#\"].includes(bottomRight);\n  const tL = [\"\\\\\", \"*\", \"#\"].includes(topLeft);\n  const bL = [\"/\", \"*\", \"#\"].includes(bottomLeft);\n\n  // cross\n  result.appendChild(cross([t, r, b, l, tR, bR, bL, tL]));\n\n  // center\n  if ((l || r) && (b || t)) {\n    const center = createTag(\"polygon\", {\n      points: \"0,0 6,0 6,6 0,6\",\n      transform: \"translate(-3 -3) translate(15 27)\"\n    });\n    result.appendChild(center);\n  }\n\n  // tip\n  if (tR || tL) {\n    const center = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      tL, // bottomRight\n      tR, // bottomLeft\n      false // topLeft\n    ]);\n    center.setAttribute(\"clip-path\", \"polygon(0 -3, 30 -3, 30 0, 0 0)\");\n    result.appendChild(center);\n  }\n\n  if (bR || bL) {\n    const center = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      bL, // topRight\n      false, // bottomRight\n      false, // bottomLeft\n      bR // topLeft\n    ]);\n    center.setAttribute(\"clip-path\", \"polygon(0 27, 15 27, 15 30, 0 30)\");\n    result.appendChild(center);\n  }\n\n  if (bL || tL) {\n    const center = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      bL && bR, // topRight\n      tL && tR, // bottomRight\n      false, // bottomLeft\n      false // topLeft\n    ]);\n    center.setAttribute(\"clip-path\", \"polygon(-3 0, 0 0, 0 54, -3 54)\");\n    result.appendChild(center);\n  }\n\n  if (bR || tR) {\n    const center = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      false, // bottomRight\n      tR && tL, // bottomLeft\n      bR && bL // topLeft\n    ]);\n    center.setAttribute(\"clip-path\", \"polygon(15 0, 30 0, 30 54, 15 54)\");\n    result.appendChild(center);\n  }\n\n  if (r || l) {\n    const center = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      r || bL, // topRight\n      tL, // bottomRight\n      tR, // bottomLeft\n      l || bR // topLeft\n    ]);\n    center.setAttribute(\"clip-path\", \"polygon(-3 24, 30 24, 30 30, -3 30)\");\n    result.appendChild(center);\n  }\n  return result;\n}\n\nexport function dotGlyph([\n  top,\n  right,\n  bottom,\n  left,\n  topRight,\n  bottomRight,\n  bottomLeft,\n  topLeft\n]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n\n  // top-right\n  if ((right == \"-\" || right == \"+\") && (bottom == \"|\" || bottom == \"'\" || bottom == \"`\" || bottom == \"+\")) {\n    const path = createTag(\"path\", {\n      d: `\n        M 30 24\n        A 18 18, 0, 0, 0, 12 42\n        L 12 54\n        L 18 54\n        L 18 42\n        A 12 12, 0, 0, 1, 30 30\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // top-left\n  if ((left == \"-\" || left == \"+\") && (bottom == \"|\" || bottom == \"'\" || bottom == \"`\" || bottom == \"+\")) {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 24\n        A 18 18, 0, 0, 1, 18 42\n        L 18 54\n        L 12 54\n        L 12 42\n        A 12 12, 0, 0, 0, 0 30        \n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // top-right\n  if ((right == \"-\" || right == \"+\") && (top == \"|\" || top == \".\" || top == \"+\")) {\n    const path = createTag(\"path\", {\n      d: `\n        M 30 30\n        A 18 18, 0, 0, 1, 12 12\n        L 12 0\n        L 18 0\n        L 18 12\n        A 12 12, 0, 0, 0, 30 24\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // bottom-left\n  if ((left == \"-\" || left == \"+\") && (top == \"|\" || top == \".\" || top == \"+\")) {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 30\n        A 18 18, 0, 0, 0, 18 12\n        L 18 0\n        L 12 0\n        L 12 12\n        A 12 12, 0, 0, 1, 0 24\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // bottom right-topRight\n  if (right == \"-\" && topRight == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 30 30\n        A 12 12, 0, 0, 1, 18 18\n        L 18 15\n        L 24 15\n        L 24 18\n        A 6 6, 0, 0, 0, 30 24\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      true, // topRight\n      false, // bottomRight\n      false, // bottomLeft\n      false // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(15px -10px, 30px -10px, 30px 30px, 2px 15px)\");\n    result.appendChild(line);\n  }\n\n  // right-topLeft\n  if (right == \"-\" && topLeft == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M -3 0\n        A 60 60, 0, 0, 0, 30 30\n        L 30 24\n        A 60 60, 0, 0, 1, 0 -6\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // left-topRight\n  if (left == \"-\" && topRight == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 30\n        A 60 60, 0, 0, 0, 33 0\n        L 30 -6\n        A 60 60, 0, 0, 1, 0 24\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // bottom left-topLeft\n  if (left == \"-\" && topLeft == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 30\n        A 12 12, 0, 0, 0, 12 18\n        L 12 15\n        L 6 15\n        L 6 18\n        A 6 6, 0, 0, 1, 0 24\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      false, // bottomRight\n      false, // bottomLeft\n      true // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(-3 -3, 12 -3, 12 18, -3 18)\");\n    result.appendChild(line);\n  }\n\n  // bottom-topRight\n  if (bottom == \"|\" && topRight == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 12 54\n        A 120 120, 0, 0, 1, 30 -6\n        L 37 -6\n        A 120 120, 0, 0, 0, 18 54\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // top-bottomRight\n  if (top == \"|\" && bottomRight == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 30 60\n        A 120 120, 0, 0, 1, 12 0\n        L 18 0\n        A 120 120, 0, 0, 0, 37 60\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // top-bottomLeft\n  if (top == \"|\" && bottomLeft == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 60\n        A 120 120, 0, 0, 0, 18 0\n        L 12 0\n        A 120 120, 0, 0, 1, -7 60\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // bottom-topLeft\n  if (bottom == \"|\" && topLeft == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 12 54\n        A 120 120, 0, 0, 0, -7 -6\n        L 0 -6\n        A 120 120, 0, 0, 1, 18 54\n        Z`\n    });\n    result.appendChild(path);\n  }\n\n  // right-bottomLeft\n  if (right == \"-\" && bottomLeft == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 48\n        A 42 42, 0, 0, 1, 30 24\n        L 30 30\n        A 42 42, 0, 0, 0, 6 48\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      false, // bottomRight\n      true, // bottomLeft\n      false // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(-3 15, 12 15, 12 30, -3 30)\");\n    result.appendChild(line);\n  }\n\n  // left-bottomRight\n  if (left == \"-\" && bottomRight == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 24\n        A 42 42, 0, 0, 1, 30 48\n        L 24 48\n        A 42 42, 0, 0, 0, 0 30\n        Z`\n    });\n\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      true, // bottomRight\n      false, // bottomLeft\n      false // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(-3 15, 12 15, 21 30, -3 30)\");\n    result.appendChild(line);\n  }\n\n  // left-bottomLeft\n  if (left == \"-\" && bottomLeft == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 0 24\n        A 12 12, 0, 0, 1, 12 39\n        L 6 39\n        A 6 6, 0, 0, 0, 0 30\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      false, // bottomRight\n      true, // bottomLeft\n      false // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(-3 6, 12 6, 12 30, -3 30)\");\n    result.appendChild(line);\n  }\n\n  // right-bottomRight\n  if (right == \"-\" && bottomRight == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 30 24\n        A 12 12, 0, 0, 0, 18 39\n        L 24 39\n        A 6 6, 0, 0, 1, 30 30 \n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      true, // bottomRight\n      false, // bottomLeft\n      false // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(3 6, 18 6, 18 30, 3 30)\");\n    result.appendChild(line);\n  }\n\n  // bottomLeft-bottomRight\n  if (bottomLeft == \"/\" && bottomRight == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 3 42\n        A 15 15, 0, 0, 1, 27 42\n        L 25 51\n        A 9 9, 0, 0, 0, 5 51\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      true, // bottomRight\n      true, // bottomLeft\n      false // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(-3 15, 33 15, 33 30, -3 30)\");\n    result.appendChild(line);\n  }\n\n  // topLeft-topRight\n  if (topLeft == \"\\\\\" && topRight == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 3 12\n        A 15 15, 0, 0, 0, 27 12\n        L 22 9\n        A 9 9, 0, 0, 1, 8 9\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      true, // topRight\n      false, // bottomRight\n      false, // bottomLeft\n      true // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(-3 -3, 33 -3, 33 12, -3 12)\");\n    result.appendChild(line);\n  }\n\n  // topRight-bottomRight\n  if (topRight == \"/\" && bottomRight == \"\\\\\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 22 9\n        A 30 30, 0, 0, 0, 22 45\n        L 28 45\n        A 30 30, 0, 0, 1, 28 9\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      true, // topRight\n      true, // bottomRight\n      false, // bottomLeft\n      false // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(6 -3, 33 -3, 33 57, 6 57)\");\n    result.appendChild(line);\n  }\n\n  // topLeft-bottomLeft\n  if (topLeft == \"\\\\\" && bottomLeft == \"/\") {\n    const path = createTag(\"path\", {\n      d: `\n        M 8 9\n        A 30 30, 0, 0, 1, 8 45\n        L 2 45\n        A 30 30, 0, 0, 0, 2 9\n        Z`\n    });\n    result.appendChild(path);\n    const line = cross([\n      false, // top\n      false, // right\n      false, // bottom\n      false, // left\n      false, // topRight\n      false, // bottomRight\n      true, // bottomLeft\n      true // topLeft\n    ]);\n    line.setAttribute(\"clip-path\", \"polygon(-3 -3, 9 -3, 9 57, -3 57)\");\n    result.appendChild(line);\n  }\n\n  return result;\n}\n\nexport function arrowRightGlyph([, right]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const arrow = createTag(\"polygon\", { points: \"0,0 42,18 0,36\" });\n  let reach = 0;\n  if (right == \"*\" || right == \"o\" || right == \"#\") {\n    reach -= 18;\n  }\n  arrow.setAttribute(\"transform\", `translate(${reach} 9)`);\n  result.appendChild(arrow);\n  return result;\n}\n\nexport function arrowLeftGlyph([, , , left]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const arrow = createTag(\"polygon\", { points: \"0,0 42,18 0,36\" });\n\n  let reach = 30;\n  if (left == \"*\" || left == \"o\" || left == \"#\") {\n    reach += 18;\n  }\n  arrow.setAttribute(\"transform\", `translate(${reach} 9) translate(0 36) rotate(180)`);\n  result.appendChild(arrow);\n  return result;\n}\n\nexport function arrowDownGlyph([top, , bottom, , topRight, , , topLeft]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const arrow = createTag(\"polygon\", { points: \"0,0 42,18 0,36\" });\n\n  let reach = 36;\n  if (bottom == \" \") {\n    reach = 12;\n  } else if (bottom == \"_\") {\n    reach += 18;\n  } else if (bottom == \"*\" || bottom == \"o\" || bottom == \"#\") {\n    reach -= 18;\n  }\n  if (topRight == \"/\") {\n    arrow.setAttribute(\"transform\", `translate(-36 33) rotate(${90 + 22.5}, 42, 18)`);\n  } else if (topLeft == \"\\\\\") {\n    arrow.setAttribute(\"transform\", `translate(-18 33) rotate(${90 - 22.5}, 42, 18)`);\n  } else {\n    arrow.setAttribute(\"transform\", `translate(33 ${reach}) rotate(90)`);\n  }\n  result.appendChild(arrow);\n  result.appendChild(\n    cross([\n      [\"|\", \"+\"].includes(top), // top\n      false, // right\n      [\"|\", \"+\"].includes(top), // bottom\n      false, // left\n      [\"/\"].includes(topRight), // topRight\n      false, // bottomRight\n      false, // bottomLeft\n      [\"\\\\\"].includes(topLeft) // topLeft\n    ])\n  );\n  return result;\n}\n\nexport function hatGlyph([top, , bottom, , , bottomRight, bottomLeft]: Neighbours): SVGElement {\n  const result = createTag(\"g\");\n  const arrow = createTag(\"polygon\", { points: \"0,0 42,18 0,36\" });\n\n  let reach = 42;\n  if (top == \"-\") {\n    reach -= 15;\n  }\n\n  if (bottomLeft == \"/\") {\n    arrow.setAttribute(\"transform\", `translate(-18 -15) rotate(${-45 - 22.5}, 42, 18)`);\n  } else if (bottomRight == \"\\\\\") {\n    arrow.setAttribute(\"transform\", `translate(-36 -15) rotate(${-90 - 22.5}, 42, 18)`);\n  } else {\n    arrow.setAttribute(\"transform\", `translate(-3 ${reach}) rotate(-90)`);\n  }\n  result.appendChild(arrow);\n  result.appendChild(\n    cross([\n      false, // top\n      false, // right\n      [\"+\", \"|\"].includes(bottom), // bottom\n      false, // left\n      false, // topRight\n      [\"\\\\\"].includes(bottomRight), // bottomRight\n      [\"/\"].includes(bottomLeft), // bottomLeft\n      false // topLeft\n    ])\n  );\n  return result;\n}\n\nexport function buildGlyphs(): Record<string, GlyphHandler> {\n  let glyphs: Record<string, GlyphHandler> = {\n    \"|\": barGlyph,\n    \"-\": dashGlyph,\n    \"~\": tildeGlyph,\n    _: underscoreGlyph,\n    \":\": colonGlyph,\n    \"=\": equalGlyph,\n    \"*\": asteriskGlyph,\n    o: circleGlyph,\n    \"/\": slashGlyph,\n    \"\\\\\": doubleBackslashGlyph,\n    \"#\": sharpGlyph,\n    \"+\": plusGlyph,\n    \".\": dotGlyph,\n    \">\": arrowRightGlyph,\n    \"<\": arrowLeftGlyph,\n    v: arrowDownGlyph,\n    \"^\": hatGlyph\n  };\n\n  const alias = {\n    \"┌\": \"+\",\n    \"┐\": \"+\",\n    \"└\": \"+\",\n    \"┘\": \"+\",\n    \"─\": \"-\",\n    \"►\": \">\",\n    \"'\": \".\",\n    \"`\": \".\",\n    V: \"v\"\n  };\n\n  Object.entries(alias).forEach(([k, v]) => {\n    glyphs[k] = (around) => glyphs[v](around);\n  });\n\n  return glyphs;\n}\n","export function dropWhile<T>(xs: T[], pred: (elem: T, idx: number) => boolean) {\n  const n = xs.length;\n  let i = 0;\n\n  while (i < n && pred(xs[i], i)) {\n    i++;\n  }\n\n  return xs.slice(i);\n}\n","import { around, createTag, grid, text } from \"./glyph-util\";\nimport { buildGlyphs } from \"./glyphs\";\nimport { dropWhile } from \"./util\";\n\nconst glyphs = buildGlyphs();\n\ntype Diagram = string[][];\nfunction render(diagram: Diagram) {\n  const result = createTag(\"g\");\n\n  for (let y = 0; y < diagram.length; y++) {\n    for (let x = 0; x < diagram[y].length; x++) {\n      const char = diagram[y][x];\n\n      if (char == \" \" || char == '\"') {\n        continue;\n      }\n\n      const g = createTag(\"g\");\n\n      let insideQuotedText = false;\n      for (let i = 0; i < x; i++) {\n        if (diagram[y][i] == '\"') {\n          insideQuotedText = !insideQuotedText;\n        }\n      }\n\n      const neighbors = around(diagram, [x, y]);\n\n      if (char.match(/[A-Za-z0-9]/)) {\n        const [, right, , left] = neighbors;\n        // We special case \"v\", which is a down arrow, and also a text character.\n        insideQuotedText =\n          insideQuotedText || !!left.match(/[A-Za-uw-z0-9]/) || !!right.match(/[A-Za-uw-z0-9]/);\n      }\n\n      const reserved = !!glyphs[char] && !insideQuotedText;\n\n      if (reserved) {\n        g.appendChild(glyphs[char](neighbors));\n      }\n\n      g.appendChild(text(char, reserved));\n\n      g.setAttribute(\"transform\", `translate(${x * 30} ${y * 54})`);\n      result.appendChild(g);\n    }\n  }\n  return result;\n}\n\ntype Opts = {\n  zoom: number,\n  debug: boolean,\n  padding: number\n}\n\nexport function create(source: string, opts: Opts) {\n  const lines = dropWhile(source.split(\"\\n\"), (v) => !v)\n  lines.splice(-1);\n  \n  const diagram = lines.map((line: string) => line.trimEnd().split(\"\"));\n\n  const width = diagram.reduce((acc: number, row: string[]) => Math.max(acc, row.length), -Infinity);\n  const height = diagram.length;\n\n  const padding = opts.padding;\n\n  let svg = createTag(\"svg\", {\n    width: width * 30 * opts.zoom,\n    height: height * 54 * opts.zoom,\n    debug: opts.debug,\n    viewBox: `${-padding} ${-padding} ${width * 30 + 2 * padding} ${height * 54 + 2 * padding}`,\n    class: \"debug typograms\"\n  });\n\n  svg.appendChild(render(diagram));\n\n  if (opts.debug) {\n    svg.appendChild(grid(width, height));\n  }\n\n  return svg;\n}\n","import \"./style.scss\";\nimport { create } from \"./typograms.js\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  for (const node of document.querySelectorAll(\"pre[data-typogram]\")) {\n    if (node.hasAttribute(\"data-typogram-disabled\")) {\n      continue;\n    }\n    const source = node.textContent;\n    const zoom = Number(node.getAttribute(\"data-typogram-zoom\") || 0.3);\n    const padding = Number(node.getAttribute(\"data-typogram-padding\") || 6);\n    const debug = node.hasAttribute(\"data-typogram-debug\");\n    if (source) {\n      const svg = create(source, { zoom, debug, padding });\n      node?.replaceWith(svg);\n    }\n  }\n  // stay backwards compatible\n  // replace all of the <script type=\"text/typogram\"> tags\n  for (const script of document.querySelectorAll(\"script[type='text/typogram']\")) {\n    if (script.hasAttribute(\"disabled\")) {\n      continue;\n    }\n    const source = script.textContent;\n    const zoom = Number(script.getAttribute(\"zoom\") || 0.3);\n    const padding = Number(script.getAttribute(\"padding\") || 0);\n    const debug = script.hasAttribute(\"grid\");\n    if (source) {\n      const svg = create(source, { zoom, debug, padding });\n      script?.parentNode?.insertBefore(svg, script.nextSibling);\n    }\n  }\n});\n"],"names":["createTag","tag","attrs","elem","k","v","grid","width","height","result","i","line","cross","top","right","bottom","left","topRight","bottomRight","bottomLeft","topLeft","text","char","reserved","g","value","translation","x","y","around","diagram","barGlyph","dashGlyph","tildeGlyph","underscoreGlyph","colonGlyph","equalGlyph","first","second","asteriskGlyph","circle","circleGlyph","connectors","inner","slashGlyph","tip","doubleBackslashGlyph","sharpGlyph","polygon","points","plusGlyph","r","l","t","tR","bR","tL","bL","center","dotGlyph","path","arrowRightGlyph","arrow","reach","arrowLeftGlyph","arrowDownGlyph","hatGlyph","buildGlyphs","glyphs","dropWhile","xs","pred","n","render","insideQuotedText","neighbors","create","source","opts","lines","acc","row","padding","svg","_a","node","zoom","debug","script"],"mappings":"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"}